package com.services.APIGateway.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;
import org.springframework.web.reactive.function.client.WebClientResponseException;

import com.services.APIGateway.dtos.LoginRequest;
import com.services.APIGateway.dtos.RegistrationRequestDTO;
import com.services.APIGateway.dtos.Role;
import com.services.APIGateway.dtos.UserRegistrationRequest;

import reactor.core.publisher.Mono;

@RestController
@RequestMapping("/api/auth")
public class AuthController {

    @Autowired
    private WebClient.Builder webClientBuilder;
    
    @Autowired
    private RestTemplate restTemplate;

    @PostMapping("/login")
    public Mono<ResponseEntity<String>> login(@RequestBody LoginRequest request) {
        return webClientBuilder.build()
            .post()
            .uri("http://user-service/api/users/authenticate")
            .bodyValue(request)
            .retrieve()
            .bodyToMono(String.class)
            .map(token -> ResponseEntity.ok(token))
            .onErrorReturn(ResponseEntity.status(HttpStatus.UNAUTHORIZED).build());
    }

    @PostMapping("/register")
    public ResponseEntity<String> register(@RequestBody UserRegistrationRequest request) {
        
    	System.out.println("request:"+ request);
    	
    	RegistrationRequestDTO newRequest = new RegistrationRequestDTO();
    	
    	newRequest.setUsername(request.getUsername());
    	newRequest.setPassword(request.getPassword());
    	if ("USER".equals(request.getRole())) {
    	    newRequest.setRole(Role.USER);
    	} else {
    	    newRequest.setRole(Role.ADMIN);
    	}
    	
//    	return webClientBuilder.build()
//            .post()
//            .uri("http://USER-SERVICE/api/users/register")
//            .bodyValue(newRequest)
//            .retrieve()
//            .bodyToMono(String.class)
//            .map(user -> ResponseEntity.ok("User registered successfully"))
//            .onErrorResume(WebClientResponseException.class, ex -> {
//                System.out.println("Error response: " + ex.getResponseBodyAsString());
//                return Mono.just(ResponseEntity.status(HttpStatus.BAD_REQUEST).build());
//            });
    	
    	 String url = "http://USER-SERVICE/api/users/register";
    	 String str = restTemplate.postForObject(url, newRequest, String.class);
         return new ResponseEntity<String>(str,HttpStatus.OK);
    }
    
}